---
- name: Determine existing users
  shell: 'cat /etc/passwd | grep /bin/bash | grep -v root | grep -v guest | cut -d: -f1'
  changed_when: false 
  register: ubuntu_users

- name: Ensure update alias in bashrc of new create user
  lineinfile:
    path: "/etc/skel/.bashrc"
    regexp: '^alias update=(.*)$'
    line: alias update="sudo git -C /root/hdhweg-ubuntu pull && sudo ansible-playbook /root/hdhweg-ubuntu/setup.yml"

- name: Ensure update alias not present in bashrc of existing users
  lineinfile:
    path: "/home/{{ item }}/.bashrc"
    regexp: '^alias update=(.*)$'
    line: alias update="sudo git -C /root/hdhweg-ubuntu pull && sudo ansible-playbook /root/hdhweg-ubuntu/setup.yml"
    owner: "{{ item }}"
    group: "{{ item }}"
    state: absent
  with_items: "{{ ubuntu_users.stdout_lines }}"

- name: Ensure hardware specs in bashrc of new create user
  lineinfile:
    path: "/etc/skel/.bashrc"
    regexp: '^alias hwpdf=(.*)$'
    line: alias hwpdf="{ date ; sudo inxi -Fx -c 0; } | txt2html | wkhtmltopdf - ~/Downloads/SYSTEMINFO.pdf"
    state: absent

- name: Ensure hardware specs alias not present in bashrc of existing users
  lineinfile:
    path: "/home/{{ item }}/.bashrc"
    regexp: '^alias hwpdf=(.*)$'
    line: alias hwpdf="{ date ; sudo inxi -Fx -c 0; } | txt2html | wkhtmltopdf - ~/Downloads/SYSTEMINFO.pdf"
    owner: "{{ item }}"
    group: "{{ item }}"
    state: absent
  with_items: "{{ ubuntu_users.stdout_lines }}"

- name: Ensure update alias not present in bashrc of existing users
  lineinfile:
    path: "/home/{{ item }}/.bashrc"
    regexp: '^alias bigupdate=(.*)$'
    line: alias bigupdate="sudo git -C /root/hdhweg-ubuntu pull && sudo ansible-playbook /root/hdhweg-ubuntu/custom.yml"
    owner: "{{ item }}"
    group: "{{ item }}"
    state: absent
  with_items: "{{ ubuntu_users.stdout_lines }}"

- name: Ensure teamviewer daemon enable alias not present in bashrc of existing users
  lineinfile:
    path: "/home/{{ item }}/.bashrc"
    regexp: '^alias twstart=(.*)$'
    line: alias twstart="sudo killall /opt/teamviewer/tv_bin/TeamViewer; sudo teamviewer daemon enable"
    owner: "{{ item }}"
    group: "{{ item }}"
    state: absent
  with_items: "{{ ubuntu_users.stdout_lines }}"

- name: Ensure reinstall alias not present in bashrc of existing users
  lineinfile:
    path: "/home/{{ item }}/.bashrc"
    regexp: '^alias reinstall=(.*)$'
    line: alias reinstall="wget -qO setup.sh https://raw.githubusercontent.com/tna76874/hdhweg-ubuntu/master/setup.sh && chmod +x setup.sh  && sudo bash setup.sh && rm setup.sh"
    owner: "{{ item }}"
    group: "{{ item }}"
    state: absent
  with_items: "{{ ubuntu_users.stdout_lines }}"

- name: Ensure repair alias not present in bashrc of existing users
  lineinfile:
    path: "/home/{{ item }}/.bashrc"
    regexp: '^alias repair=(.*)$'
    line: alias repair="sudo git -C /root/hdhweg-ubuntu pull && sudo ansible-playbook /root/hdhweg-ubuntu/main.yml --tags repair"
    owner: "{{ item }}"
    group: "{{ item }}"
    state: absent
  with_items: "{{ ubuntu_users.stdout_lines }}"

- name: Ensure .wegrc integrated in .bashrc of existing users
  lineinfile:
    path: "/home/{{ item }}/.bashrc"
    regexp: '^source "(.*)/.wegrc"$'
    line: source "/home/{{ item }}/.wegrc"
    owner: "{{ item }}"
    group: "{{ item }}"
  with_items: "{{ ubuntu_users.stdout_lines }}"

- name: Ensure .wegrc in homefolders
  template:
    src: "wegrc.j2"
    dest: "/home/{{ item }}/.wegrc"
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: 0644
  with_items: "{{ ubuntu_users.stdout_lines }}"

- name: Ensure .wegrc integrated in .bashrc of root user
  lineinfile:
    path: "/root/.bashrc"
    regexp: '^source "(.*)/.wegrc"$'
    line: source "/root/.wegrc"
    owner: root
    group: root

- name: Ensure .wegrc in root homefolder
  template:
    src: "wegrc.j2"
    dest: "/root/.wegrc"
    owner: root
    group: root
    mode: 0644

- name: Ensure .wegrc integrated in .bashrc of new create user
  lineinfile:
    path: "/etc/skel/.bashrc"
    regexp: '^source "(.*)/.wegrc"$'
    line: source "$HOME/.wegrc"

- name: Ensure .wegrc in skel folder
  template:
    src: "wegrc.j2"
    dest: "/etc/skel/.wegrc"
    owner: root
    group: root
    mode: 0644

- name: Ensure update desktop entry
  template:
    src: update.desktop
    dest: "/home/{{ item }}/Schreibtisch/update.desktop"
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: 0755
  with_items: "{{ ubuntu_users.stdout_lines }}"
  ignore_errors: yes

- name: Ensure trusted update launcher
  shell: sudo -u {{ item }} dbus-launch gio set /home/{{ item }}/Schreibtisch/update.desktop metadata::trusted yes
  with_items: "{{ ubuntu_users.stdout_lines }}"
  ignore_errors: yes
  become: yes
  args:
    warn: false
