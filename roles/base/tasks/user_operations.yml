---
# Ensure user groups
- name: Ensure user groups
  user:
    name: "{{ user_item }}"
    groups: "{{ item }}"
    append: yes
    state: present
  loop:
   - 'update'

# Ensure settings and alias

- name: Ensure templates
  template:
    src: "{{ item.file }}"
    dest: "{{ item.dest }}"
    owner: "{{ user_item }}"
    group: "{{ user_item }}"
    mode: "{{ item.mode }}"
  loop:
    - { file: "wegrc.j2", dest: "/home/{{ user_item }}/.wegrc", mode: "0644" }
    - { file: "update.desktop", dest: "/home/{{ user_item }}/Schreibtisch/update.desktop", mode: "0755" }
    - { file: "support.desktop", dest: "/home/{{ user_item }}/Schreibtisch/support.desktop", mode: "0755" }
  ignore_errors: yes

- name: Ensure files contents
  lineinfile:
    path: "{{ item.path }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
    owner: "{{ user_item }}"
    group: "{{ user_item }}"
  loop:
    - {path: "/home/{{ user_item }}/.bashrc", regexp: '^alias update=(.*)$', state: "absent", line: ""}
    - {path: "/home/{{ user_item }}/.bashrc", regexp: '^source "(.*)/.wegrc"$', state: "present", line: 'source "/home/{{ user_item }}/.wegrc"'}
  
- name: Ensure trusted update launcher
  shell: "{{ item }}"
  become_user: "{{ user_item }}"
  ignore_errors: yes
  changed_when: false
  loop:
    - dbus-launch gio set /home/{{ user_item }}/Schreibtisch/update.desktop "metadata::trusted" true
    - dbus-launch gio set /home/{{ user_item }}/Schreibtisch/support.desktop "metadata::trusted" true

# Edit favorite bar

- name: Read favorites from dconf
  become_user: "{{ user_item }}"
  dconf:
    key: "/org/gnome/shell/favorite-apps"
    state: read
  register: favorites_user
  ignore_errors: yes
  when: config_show_support_in_favorites|bool

- name: Extracting present favorites
  become_user: "{{ user_item }}"
  set_fact:
    favorites_user: "{{ (favorites_user.value) }}"
  ignore_errors: yes
  when: config_show_support_in_favorites|bool

- name: Ensure favorite entrys
  become_user: "{{ user_item }}"
  set_fact:
    new_favorites: "{{ new_favorites|default(favorites_user) + [item] }}"
  loop:
    - 'support.desktop'
    - 'update.desktop'
  ignore_errors: yes
  when: config_show_support_in_favorites|bool

- name: Write favorites to dconf
  become_user: "{{ user_item }}"
  dconf:
    key: "/org/gnome/shell/favorite-apps"
    value: "{{ new_favorites }}"
    state: present
  when: config_show_support_in_favorites|bool and (favorites_user|unique|list != new_favorites|unique|list)
  ignore_errors: yes

# Ensure scripts
- name: Ensure directories
  file:
    path: "{{ item }}"
    owner: "{{ user_item }}"
    state: directory
  loop:
    - "/home/{{ user_item }}/.local/share/nautilus/scripts"
    - "/home/{{ user_item }}/.config/rustdesk"

- name: Ensure nautilus scripts
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: "{{ user_item }}"
    group: "{{ user_item }}"
  loop:
    - {src: "pdf_verkleinern", dest: "/home/{{ user_item }}/.local/share/nautilus/scripts/pdf_verkleinern", mode: "0755"}
    - {src: "scans_verbessern", dest: "/home/{{ user_item }}/.local/share/nautilus/scripts/scans_verbessern", mode: "0755"}
    - {src: "pdf_zusammenfassen", dest: "/home/{{ user_item }}/.local/share/nautilus/scripts/pdf_zusammenfassen", mode: "0755"}
    - {src: "img2pdf.sh", dest: "/home/{{ user_item }}/.local/share/nautilus/scripts/img2pdf", mode: "0755"}
    - {src: "anonymisieren", dest: "/home/{{ user_item }}/.local/share/nautilus/scripts/anonymisieren", mode: "0755"}
    - {src: "compress_video.j2", dest: "/home/{{ user_item }}/.local/share/nautilus/scripts/compress_video", mode: "0755"}
    - {src: "RustDesk2.toml.j2", dest: "/home/{{ user_item }}/.config/rustdesk/RustDesk2.toml", mode: "0664"}

- name: Ensure rembg script
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
  loop:
    - {src: "rembg.j2", dest: "/home/{{ user_item }}/.local/share/nautilus/scripts/remove-background", mode: "0755"}
  when: enable_rembg|default(False)

# Ensure gnome extension states

- name: Ensure gnome extension states
  shell: "gnome-extensions {{ item.state }} {{ item.ext }} "
  become_user: "{{ user_item }}"
  changed_when: false
  with_items: "{{ config_extension_states }}" 
  ignore_errors: yes

# ensure tracker disabled

- name: Ensure tracker disabled
  shell: "{{ tracker_disable.cmd }}; {{ tracker_disable.reset }}"
  become_user: "{{ user_item }}"
  changed_when: false
  when: config_disable_tracker|bool
  ignore_errors: yes

# Ensure present public keys
- name: Ensure .ssh directory
  file:
    path: "/home/{{ user_item }}/.ssh"
    owner: "{{ user_item }}"
    state: directory

- name: Check key file
  stat: 
    path: "/home/{{ user_item }}/.ssh/id_rsa"
  register: ssh_key_file

- name: "Ensure ssh key exists"
  openssh_keypair:
    path: "/home/{{ user_item }}/.ssh/id_rsa"
    type: rsa
    size: 4096
    state: present
  become_user: "{{ user_item }}"
  ignore_errors: yes
  when: not ssh_key_file.stat.exists