---
- name: Ensure no interrupted system update
  shell: dpkg --configure -a
  become: yes
  changed_when: false
  register: apt_return
  until: apt_return.rc | default(0) == 0
  retries: 30
  delay: 30

- name: Ensure ppa's states
  apt_repository:
    repo: "{{ item.ppa }}"
    state: "{{ item.state }}"
  with_items: "{{ config_apt_ppa_list }}"
  when: item.state == 'absent' or ansible_facts['lsb']['major_release']| int <= item.ubuntu_max_release

- name: Ensure key states
  apt_key:
    url: "{{ item.url }}"
    state: "{{ item.state }}"
    file: "{{ item.dest }}"
  loop: "{{ config_apt_keys }}"
  ignore_errors: yes

- name: Ensure key states (curl)
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
  loop: "{{ config_apt_keys_curl }}"
  ignore_errors: yes

- name: Ensure source states
  apt_repository:
    repo: "{{ item.repo }}"
    state: "{{ item.state }}"
    filename: "{{ item.filename }}"
    update_cache: true
  loop: "{{ config_apt_sources }}"

- name: Triggering upgrade handler
  assert: { that: true, quiet: true }
  changed_when: true
  when: not config_perform_apt_upgrade|default(false)
  notify:
    - update apt
    - upgrade apt

- name: Triggering dist upgrade and autoremove handler
  assert: { that: true, quiet: true }
  changed_when: true
  notify:
    - dist-upgrade
    - autoremove apt

- name: Flush handlers
  meta: flush_handlers

- name: Ensure update alias in bashrc of new create user
  lineinfile:
    path: "/etc/default/grub"
    regexp: '^GRUB_DISABLE_OS_PROBER=(.*)$'
    line: GRUB_DISABLE_OS_PROBER=false
  when: ansible_facts['lsb']['major_release']| int >= 22
  notify:
    - update grub

- name: Ensure apt packages
  apt:
    name: "{{ config_apt_list }}"
    state: latest
    install_recommends: yes

- name: Ensure pipewire
  apt:
    name: "{{ config_apt_pipewire }}"
    state: "{{ 'latest' if config_pipewire_enabled|bool else 'absent' }}"
  ignore_errors: yes
  notify:
   - reload systemd
   - setting pulseaudio systemd state
   - setting pipewire systemd state

- name: Flush handlers
  meta: flush_handlers

- name: Ensure apt packages absent
  apt:
    name:
      - xournalpp
      - master-pdf-editor
      - zotero-standalone
      - geogebra-classic
      - libreoffice-draw
      - libreoffice-calc
      - libreoffice-impress
      - libreoffice-writer
      - darktable
      - freecad
      - signal-desktop
      - restic
      - gimp
      - inkscape
      - chromium-browser
      - chromium-codecs-ffmpeg-extra
      - firefox
      - kdenlive
      - scribus
      - scribus-doc
      - scribus-template
      - shotwell
      - hibiscus-ppa
      - speedtest-cli
      - codium
      - nextcloud-client
      - nautilus-wipe
    state: absent

- name: Ensure packages for ubuntu => 20
  apt:
    name:
      - python-is-python3
      - heif-gdk-pixbuf
    state: latest
    install_recommends: yes
  when: ansible_facts['lsb']['id'] == "Ubuntu" and ansible_facts['lsb']['major_release']| int == 20

- name: Query duplicati releases from github
  uri:                                                               
    url: https://api.github.com/repos/duplicati/duplicati/releases
    return_content: true                                             
  register: duplicati_source   
  ignore_errors: yes                                          

- name: Register duplicati beta url
  set_fact:
    duplicati_beta:  "{{ duplicati_source.json | selectattr('tag_name', 'contains', '_beta_') | list }}"
  ignore_errors: yes

- name: Register duplicati deb url
  set_fact:
    duplicati_deb:  "{{ duplicati_beta[0]['assets'] | selectattr('browser_download_url', 'contains', 'all.deb') | list }}"
  ignore_errors: yes

- name: Ensure duplicati
  apt:
    deb: "{{ duplicati_deb[0]['browser_download_url'] }}"
  ignore_errors: yes

- name: Ensure Breitbandmessung
  apt:
    deb: "{{ breitbandmessung_deb }}"
  ignore_errors: yes
