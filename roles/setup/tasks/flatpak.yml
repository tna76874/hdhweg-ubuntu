---
- name: Ensure flathub flatpak repository remotes
  flatpak_remote:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    flatpakrepo_url: "{{ item.repo }}"
  loop:
    - { repo: "https://dl.flathub.org/repo/flathub.flatpakrepo", name: "flathub", state: "present" }
    - { repo: "https://flathub.org/beta-repo/flathub-beta.flatpakrepo", name: "flathub-beta", state: "present" }

# UPDATING FOR EACH PACKAGE
# - name: update flatpaks
#   shell: "flatpak update {{ item.package }} -y"
#   with_items: "{{ config_flatpak_list }}"
#   when: "(item.version is not defined) and (item.state=='present')"

# - name: repair flatpak
#   shell: "flatpak repair"
#   become: yes

- name: Update and repair flatpaks
  block:
    - name: update flatpaks
      shell: "flatpak update -y"
      become: yes
  rescue:
    - name: repair flatpak
      shell: "flatpak repair"
      become: yes
  ignore_errors: yes

- name: Ensure flatpak packages
  flatpak:
    remote: "{{ item.repo }}"
    name: "{{ item.package }}"
    state: "{{ item.state }}"
  with_items: "{{ config_flatpak_list }}"
  ignore_errors: yes

- name: Triggering flatpak upgrade handler
  assert: { that: true, quiet: true }
  changed_when: true
  when: "not config_perform_apt_upgrade|default(false) and 'deploy' not in ansible_run_tags"
  notify:
    - autoremove flatpaks

- name: Triggering flatpak versions handler
  assert: { that: true, quiet: true }
  changed_when: true
  notify:
    - unmask flatpaks
    - update flatpak versions
  when: "'deploy' not in ansible_run_tags"