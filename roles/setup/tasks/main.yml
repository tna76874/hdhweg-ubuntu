---
- name: Determine existing users
  shell: 'cat /etc/passwd | grep /bin/bash | grep -v root | grep -v guest | cut -d: -f1'
  changed_when: false 
  register: ubuntu_users

- name: ensure vars
  template:
    src: "{{ item.file }}"
    dest: "{{ item.destination }}"
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  become: yes
  ignore_errors: yes
  when: config_generate_config_file|bool
  loop:
    - { file: "vars.j2", destination: "/root/.config/vars_sysconfig.yml", owner: "root", mode: "0755" }

- name: Triggering apt upgrade handler
  assert: { that: true, quiet: true }
  changed_when: true
  notify:
    - notification start apt

- name: Flush handlers
  meta: flush_handlers

- name: Ensure custom list not None
  set_fact:
    config_custom_flatpak: []
  when: config_custom_flatpak == None

- name: Get list of masked flatpaks
  shell: "flatpak mask | tail -n +1"
  register: flatpak_masked

- name: Set facts
  set_fact:
    config_flatpak_list: "{% if config_extended_software|bool %}{{ config_custom_flatpak + config_flatpak_list_1 + config_flatpak_list_2 }}{% else %}{{ config_custom_flatpak + config_flatpak_list_1 }}{% endif %}"
    config_apt_ppa_list: "{% if config_extended_software|bool %}{{ config_apt_ppa_list_1 + config_apt_ppa_list_2 }}{% else %}{{ config_apt_ppa_list_1 }}{% endif %}"
    config_apt_list: "{% if config_extended_software|bool %}{{ config_apt_list_1 + config_apt_list_2 }}{% else %}{{ config_apt_list_1 }}{% endif %}"
    flatpak_masked_list: "{{ flatpak_masked.stdout_lines | map('trim') | list }}"

- name: Ensure galaxy requirements
  shell: "{{ item }}"
  args:
    chdir: "{{ playbook_dir }}"
  become: yes
  changed_when: False
  loop:
    - "ansible-galaxy install -r requirements.yml"

#############

- name: Run apt
  block:
  - import_tasks: apt.yml
    when: not config_downgrade|bool

  rescue:
  - name: Ensure teamviewer repos absent
    ansible.builtin.file:
      path: "{{ item }}"
      state: absent
    loop:
      - "/etc/apt/sources.list.d/teamviewer.list"
      - "/etc/apt/sources.list.d/teamviewer.list.dpkg-dist"
      - "/etc/apt/sources.list.d/teamviewer.list.save"

  - import_tasks: apt.yml
    when: not config_downgrade|bool

- import_tasks: flatpak.yml
  when: not config_downgrade|bool

- import_tasks: snap.yml
  when: not config_downgrade|bool

- import_tasks: misc.yml
  when: not config_downgrade|bool

- import_tasks: linuxrouter.yml
  when: not config_downgrade|bool

- import_tasks: downgrade.yml
  when: config_downgrade|bool

- include_tasks: nextcloud_migrate.yml
  loop: "{{ ubuntu_users.stdout_lines }}"
  loop_control:
    loop_var: user_item

- import_tasks: rembg.yml
  when: enable_rembg|bool

- import_tasks: wifi.yml  
  when: ensure_rtw89_module|bool

- name: Triggering handlers
  assert: { that: true, quiet: true }
  changed_when: true
  notify:
    - autoremove apt
    - notification stop apt

- name: Disable rtw89 module
  assert: { that: true, quiet: true }
  changed_when: true
  when: not ensure_rtw89_module|bool
  notify:
    - disable rtw89

- include_tasks: config_mimetypes.yml
  loop: "{{ ubuntu_users.stdout_lines }}"
  loop_control:
    loop_var: user_item
  when: config_mimetypes|bool

- import_tasks: debloater.yml

- import_tasks: extra_roles.yml