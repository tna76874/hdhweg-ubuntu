---
- name: Ensure misc apt packages
  apt:
    name:
      - python3
      - python3-pip
      - gir1.2-poppler-0.18
      - libimage-exiftool-perl
      # Manim
      - libcairo2-dev
      - libpango1.0-dev
      - ffmpeg
    state: latest
    install_recommends: yes

- name: Ensure pip packages
  pip:
    name: "{{ item.name }}"
    executable: "{{ item.executable }}"
    state: "{{ item.state }}"
  become: true
  loop:
    - { name: "mat2", executable: "pip3", state: "latest"}
    - { name: "virtualenv", executable: "pip3", state: "latest"}
    - { name: "git+https://github.com/tna76874/mdl.git", executable: "pip3", state: "latest"}
    - { name: "git+https://github.com/tna76874/renamer.git", executable: "pip3", state: "latest"}
    - { name: "envelope", executable: "pip3", state: "latest"}
    - { name: "paramiko", executable: "pip3", state: "latest"}
    - { name: "cryptography", executable: "pip3", state: "latest"}
    - { name: "requests<2.29.0", executable: "pip3", state: "present"}
    - { name: "urllib3<2.0", executable: "pip3", state: "present"}
    - { name: "github3.py", executable: "pip3", state: "latest"}
    - { name: "docker-py", executable: "pip3", state: "absent"}
    - { name: "docker==6.1.3", executable: "pip3", state: "present"}
    - { name: "docker-compose", executable: "pip3", state: "{{ 'latest' if  docker_compose_pip_enabled | default(True) | bool else 'absent' }}"}
  ignore_errors: yes

- name: Ensure latest manim docker image
  docker_image:
    name: manimcommunity/manim:latest
    source: pull
  ignore_errors: yes
  when: '"docker-ce" in ansible_facts.packages and pull_manim|default(False)'

- name: Ensure steam-devices if steam present
  block:
    - name: Ensure steam-devices
      apt:
        name:
          - steam-devices
        state: latest
        install_recommends: yes
      ignore_errors: yes

    - name: Ensure steam apt absent
      apt:
        name:
          - steam
        state: absent
      ignore_errors: yes

    - include_tasks: ge_proton.yml
      loop: "{{ ubuntu_users.stdout_lines }}"
      loop_control:
        loop_var: user_item

    - name: Install flatpak proton GE
      flatpak:
        remote: "{{ item.repo }}"
        name: "{{ item.package }}"
        state: "{{ item.state }}"
      with_items:
        - { package: "com.valvesoftware.Steam.CompatibilityTool.Proton-GE", repo: "flathub", state: present }
      ignore_errors: yes

  ignore_errors: yes
  become: yes
  when: "'com.valvesoftware.Steam' in flatpak_installed_list"

- name: WoeUSB
  block:
    - name: Install necessary WoeUSB-ng dependencies
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - git
        - p7zip-full
        - python3-pip
        - python3-wxgtk4.0
        - grub2-common
        - grub-pc-bin

    - name: Ensure WoeUSB-ng
      pip:
        name: "{{ item.name }}"
        executable: "{{ item.executable }}"
        state: "{{ item.state }}"
      become: true
      loop:
        - { name: "WoeUSB-ng", executable: "pip3", state: "latest"}
  ignore_errors: true
  become: yes