---
- include: ../../base/handlers/main.yml

- name: update grub
  shell: "update-grub"
  become: yes

- name: reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes

- name: setting pulseaudio systemd state
  shell: DISPLAY=:0 DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/`id -u {{ item }}`/bus systemctl --user --now "{{ 'disable' if config_pipewire_enabled|bool else 'enable' }}" pulseaudio.service pulseaudio.socket
  become_user: "{{ item }}"
  with_items: "{{ ubuntu_users.stdout_lines }}"
  ignore_errors: yes

- name: setting pipewire systemd state
  shell: DISPLAY=:0 DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/`id -u {{ item }}`/bus systemctl --user --now "{{ 'enable' if config_pipewire_enabled|bool else 'disable' }}" pipewire pipewire-pulse
  become_user: "{{ item }}"
  with_items: "{{ ubuntu_users.stdout_lines }}"
  when: config_pipewire_enabled|bool
  ignore_errors: yes

- name: update flatpaks
  shell: "flatpak update {{ item.package }} -y"
  with_items: "{{ config_flatpak_list }}"
  when: item.version is not defined

- name: unmask flatpaks
  shell: "flatpak mask --remove {{ item.package }}"
  with_items: "{{ config_flatpak_list }}"
  when: item.package in flatpak_masked_list

- name: update flatpak versions
  shell: "flatpak update {{ item.package }} --commit={{ item.version }} -y; flatpak mask {{ item.package }}"
  with_items: "{{ config_flatpak_list }}"
  when: item.version is defined

- name: make rtw89 module
  shell: "{{ item }}"
  args:
    chdir: "{{ rtw89_repo_dir }}"
  become: yes
  changed_when: True
  ignore_errors: yes
  loop:
    - "make clean"
    - "make"
    - "sudo make install"
  notify:
    - disable rtw89
    - enable rtw89

- name: disable rtw89
  modprobe:
    name: rtw89pci
    state: absent
  ignore_errors: yes

- name: enable rtw89
  modprobe:
    name: rtw89pci
    state: present
  ignore_errors: yes

- name: configure libdvd-pkg
  shell: dpkg-reconfigure libdvd-pkg -f noninteractive
  become: yes
  ignore_errors: yes