#!/usr/bin/env ansible-playbook

- hosts: localhost
  collections:
    - community.general
    - community.crypto

- name: Check the Host System
  hosts: localhost
  tags:
    - always
  tasks:
    - name: Verify the Operating System
      block:
        - name: Check Ubuntu Version
          debug:
            msg: "Checking Ubuntu Version: {{ ansible_distribution }} {{ ansible_distribution_version }}"
        - name: Check Ubuntu Version
          fail:
            msg: "The playbook only supports Ubuntu versions between 20.04 and 24.04"
          when: (ansible_distribution != 'Ubuntu') or (ansible_distribution == 'Ubuntu' and not (ansible_distribution_version is ansible.builtin.version('20.04', '>=') and ansible_distribution_version is ansible.builtin.version('24.04', '<=')))
      rescue:
        - name: End the Playbook
          meta: end_play

- name: Import local configs
  hosts: localhost
  become: yes
  tags:
    - always
  tasks:
    - name: Include vars file if present
      include_vars: "{{ item }}"
      with_first_found:
        - files:
            - vars.yml
            - /root/.config/vars_sysconfig.yml
          skip: true

- name: Deploy script
  hosts: localhost
  become: yes
  tags:
    - deploy
  roles:
    - deploy

- name: Run extra roles
  hosts: localhost
  become: yes
  tags:
    - deploy
    - extra
  roles:
    - extra

- name: Maintenance script
  hosts: localhost
  become: yes
  tags:
    - base
    - deploy
    - setup
    - bigsetup
  roles:
    - base

- name: Initial setup and update routine
  hosts: localhost
  become: yes
  tags:
    - never
    - setup
    - bigsetup
    - downgrade
  roles:
    - cloudflared
    - setup
    - security

- name: Ensure widgets
  hosts: localhost
  become: yes
  tags:
    - never
    - widgets
    - bigsetup
  roles:
    - widgets

- name: Ensure unattended-upgrades
  hosts: localhost
  become: yes
  tags:
    - never
    - unattended-upgrades
  roles:
    - ubuntu-unattended-upgrades

- name: Install Docker
  hosts: localhost
  become: yes
  tags:
    - never
    - docker
    - bigsetup
    - removebg
  roles:
    - docker

- name: Install Podman
  hosts: localhost
  become: yes
  tags:
    - never
    - podman
    - setup
    - bigsetup
    - removebg
  roles:
    - podman

- name: Install removebg API
  hosts: localhost
  become: yes
  tags:
    - never
    - removebg
  roles:
    - removebg

- name: Install themes
  hosts: localhost
  become: yes
  tags:
    - never
    - themes
  roles:
    - themes

- name: Install fonts
  hosts: localhost
  become: yes
  tags:
    - never
    - fonts
    - setup
    - bigsetup
  roles:
    - fonts

- name: Install mbz tool
  hosts: localhost
  become: yes
  tags:
    - never
    - mbz
  roles:
    - mbz

- name: Deploy jellyfin
  hosts: localhost
  become: yes
  tags:
    - never
    - jellyfin
  roles:
    - jellyfin

- name: Deploy fritzbox tools
  hosts: localhost
  become: yes
  tags:
    - never
    - fritzbox
  roles:
    - fritzbox

- name: Install Webcam Tools
  hosts: localhost
  become: yes
  tags:
    - never
    - webcam
  roles:
    - backscrub

- name: Install ausweisapp2
  hosts: localhost
  become: yes
  tags:
    - never
    - ausweisapp2
  roles:
    - ausweisapp2

- name: Install waydroid
  hosts: localhost
  become: yes
  tags:
    - never
    - waydroid
  roles:
    - waydroid

- name: Install LM Studio
  hosts: localhost
  become: yes
  tags:
    - never
    - base
    - setup
    - bigsetup
    - lmstudio
  roles:
    - lmstudio

- name: Install ai interface
  hosts: localhost
  become: yes
  tags:
    - never
    - ai
  roles:
    - ai

- name: Install Gotify desktop notification
  hosts: localhost
  become: yes
  tags:
    - never
    - gotify
  vars:
    rust_update: false
    rust_install_clean: false
    build_rust_from_source: false
    cargo_items: []
  roles:
    - rust
    - gotify

- name: Run extra roles
  hosts: localhost
  become: yes
  tags:
    - extra
  roles:
    - extra
